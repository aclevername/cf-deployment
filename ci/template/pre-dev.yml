#@ load("@ytt:data", "data")

---
groups:
- name: update-releases
  jobs:
  #@ for r in data.values.baseReleases:
  - #@ "update-" + r.name
  #@ end

resources:
#@ for r in data.values.baseReleases:
- name: #@ r.name + "-release"
  type: bosh-io-release
  source:
    repository: #@ r.repository
#@ end

- name: cf-deployment-release-candidate
  type: git
  source:
    branch: release-candidate
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent

- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

jobs:
#@ for r in data.values.baseReleases:
- name: #@ "update-" + r.name
  serial_groups:
  - update-release
  public: true
  plan:
  - aggregate:
    - get: #@ r.name + "-release"
      trigger: true
      params:
        tarball: false
    - get: cf-deployment-release-candidate
    - get: runtime-ci
    - get: stemcell
      params:
        tarball: false
  - task: #@ "update-release-" + r.name
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      release: #@ r.name + "-release"
      deployment-configuration: cf-deployment-release-candidate
    params:
      RELEASE_NAME: #@ r.name
  - task: commit-generated-manifest-and-ops
    file: runtime-ci/tasks/commit-generated-manifest/task.yml
    input_mapping:
      repo: cf-deployment-release-candidate
      manifest: updated-deployment-manifest
      ops-file: cf-deployment-release-candidate
    params:
      MANIFEST_NAME: cf-deployment.yml
      MANIFEST_DESTINATION: cf-deployment.yml
#@ end
